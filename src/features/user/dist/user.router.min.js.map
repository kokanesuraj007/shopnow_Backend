{"version":3,"sources":["user.router.js"],"names":["express","require","app","Router","req","res","body","email","password","User","findOne","user","send","token","concat","status","_context","t0","massage","post","_req$body2","name","surname","regeneratorRuntime","async","_context2","prev","next","awrap","sent","create","stop","module","exports"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,IAAMF,QAAQG,SADdH,KAAOC,QAAU,gBACvBC,IAAMA,KAAG,SAAWC,SAApBC,EAAAC,GAAoBF,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,OAAAA,EAIUC,EAAIE,KAAxBC,EAJUJ,EAIVI,MAAOC,EAJGL,EAIHK,SAJGL,EAAAA,KAAAA,EAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MAMCM,KAAKC,QAAQ,CAAEH,MAAAA,KANhBJ,KAAAA,GAMZQ,EANYR,EAAAA,MAGDQ,EAAAH,WAAAA,EAMXH,EAAIO,KAAK,CANEC,MAAA,GAAAC,OAAAP,EAAA,KAAAO,OAAAN,KAAAH,EAAAU,OAAA,KAAAH,KAAA,yBAAAP,EAAAU,OAAA,KAAAH,KAAA,kBAHCT,EAAAA,KAAAA,GAAAA,MAAAA,KAAAA,EAAAA,EAAAA,KAAAA,EAAAA,EAAAA,GAAAA,EAAAA,MAAAA,GAMcE,EAAAU,OAHf,KAAAH,KAAAI,EAAAC,GAAAC,SAHCf,KAAAA,GAAAA,IAAAA,MAAAA,OAAAA,EAAAA,SAAAA,KAAAA,KAAAA,CAAAA,CAAAA,EAAAA,OAuBpBD,IAAIiB,KAAK,UAAW,SAAOf,EAAKC,GAAZ,IAAAe,EAAAC,EAAAC,EAAAf,EAAAC,EAAA,OAAAe,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAP,EAhBNhB,EAAAE,KAAVe,EAgBgBD,EAhBhBC,KAAIV,EAgBYS,EAhBZT,QAAMJ,EAgBMa,EAhBNb,MAAAC,EAgBMY,EAhBNZ,SAgBMiB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAbLnB,KAAAC,QAAA,CAAAH,MAAAA,KAaK,KAAA,EAAA,IAAAkB,EAAAI,KAAA,CAAAJ,EAAAE,KAAA,EAAA,MAVZtB,EAAAA,OAAG,KAACU,KAAO,4CAUCU,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,GAAAJ,mBAAAK,MARTnB,KAAAqB,OAAA,CACLzB,KAAAA,EACDiB,QAAAA,EAkBGf,MAAAA,EAhCWC,SAAAA,KAoBC,KAAA,GAAAiB,EAAAI,KApBDxB,EAAAO,KAAA,CAAAC,MAAA,GAAAC,OAAAP,EAAA,KAAAO,OAAAN,KAoBC,KAAA,GAAAiB,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAR,GAAAQ,EAAA,MAAA,GApBDpB,EAAAU,OAAA,KAAAH,KAAAa,EAAAR,GAAAC,SAoBC,KAAA,GAAA,IAAA,MAAA,OAAAO,EAAAM,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,QApBDC,OAAAC,QAAA/B","file":"user.router.min.js","sourcesContent":["const express = require(\"express\");\r\nconst app = express.Router();\r\nconst User = require(\"./user.model\");\r\n\r\napp.post(\"/login\", async (req, res) => {\r\n  const { email, password } = req.body;\r\n  try {\r\n    let user = await User.findOne({ email });\r\n    if (user) {\r\n      if (user.password === password) {\r\n        res.send({\r\n          token: `${email}#${password}`,\r\n        });\r\n      } else {\r\n        res.status(401).send(`password is not match`);\r\n      }\r\n    } else {\r\n      res.status(404).send(\"user not found\");\r\n    }\r\n  } catch (e) {\r\n    res.status(404).send(e.massage);\r\n  }\r\n});\r\n\r\napp.post(\"/signup\", async (req, res) => {\r\n  const { name, surname, email, password } = req.body;\r\n\r\n  try {\r\n    let existUser = await User.findOne({ email });\r\n\r\n    if (existUser) {\r\n      res.status(404).send(\"email id already exist try another email\");\r\n    } else {\r\n      let user = await User.create({\r\n        name,\r\n        surname,\r\n        email,\r\n        password,\r\n      });\r\n\r\n      res.send({\r\n        token: `${email}#${password}`,\r\n      });\r\n    }\r\n  } catch (e) {\r\n    res.status(404).send(e.massage);\r\n  }\r\n});\r\n\r\nmodule.exports = app;\r\n"]}