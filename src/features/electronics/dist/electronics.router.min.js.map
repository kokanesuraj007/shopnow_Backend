{"version":3,"sources":["electronics.router.js"],"names":["express","require","app","Router","res","Electronic","req","data","send","_context","t0","massage","exists","regeneratorRuntime","async","_context2","prev","next","awrap","findOneAndDelete","id","body","sent","console","log","name","status","stop","post","s","_context3","area","split","length","create","quantity","defaultImage","hoverImage","price","strikePrice","firstImages","secondImages","module","exports"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,IAAMF,QAAQG,SADdH,WAAUC,QAAQ,uBACxBC,IAAMA,IAAG,IAAGF,SAAQG,EAARC,GAAAJ,IAAAA,EAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MAGCK,WAAOC,QAHRN,KAAAA,EAGJO,EAHIP,EAAAA,KAGCI,EAAAI,KAAAD,GAHDP,EAAAA,KAAAA,GAAAA,MAAAA,KAAAA,EAAAA,EAAAA,KAAAA,EAAAA,EAAAA,GAAAA,EAAAA,MAAAA,GAGCI,EAAAI,KAAAC,EAAAC,GAAAC,SAHDX,KAAAA,GAAAA,IAAAA,MAAAA,OAAAA,EAAAA,SAAAA,KAAAA,KAAAA,CAAAA,CAAAA,EAAAA,OAGCE,IAAA,OAAA,IAAA,SAAAI,EAAAF,GAAA,IAAAQ,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAKTb,WAAAc,iBAAA,CACAC,GAAAd,EAAAe,KAAAD,GAEAhB,KAAAA,EAAII,KAAKD,QARA,KAAA,EAKTK,EALSG,EAAAO,KAAAC,QAAAC,IAAAZ,EAAAN,EAAAe,KAAAD,GAAAd,EAAAe,KAAAI,MAAArB,EAAAsB,OAAA,KAAAlB,KAAA,gCAAAO,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAAF,EAAAC,KAAA,EAAAD,EAAAL,GAAAK,EAAA,MAAA,GAAAX,EAAAI,KAAAO,EAAAL,GAAAC,SAAA,KAAA,GAAA,IAAA,MAAA,OAAAI,EAAAY,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAAAzB,IAAA0B,KAAA,IAAA,SAAAtB,EAAAF,GAAA,IAAAyB,EAAA,OAAAhB,mBAAAC,MAAA,SAAAgB,GAAA,OAAA,OAAAA,EAAAd,KAAAc,EAAAb,MAAA,KAAA,EAAA,OAAAY,EAAAvB,EAAAe,KAAAd,KAAAwB,KAAAC,MAAA,KAAAT,QAAAC,IAAAK,EAAAI,QAAA7B,EAAAI,KAAA,MAAAsB,EAAAd,KAAA,EAAAc,EAAAb,KAAA,EAAAJ,mBAAAK,MAAbb,WAAA6B,OAAA,CAcGd,GAAAS,EAAA,GAAaJ,KAAAI,EAAA,GAAAM,SAAAN,EAAA,GAAAO,aAAAP,EAAA,GAAAQ,WAAAR,EAAA,GAAAS,MAAAT,EAAA,GAAAU,YAAAV,EAAA,GAAAW,YAAA,GAAAC,aAAA,GAGVrB,YAAO,MAjBA,KAAA,EAAAU,EAAAR,KA8CTlB,EAAIsB,OAAO,KAAKlB,KAAK,2BA9CZsB,EAAAb,KAAA,GAAA,MAAA,KAAA,GAAAa,EAAAd,KAAA,GAAAc,EAAApB,GAAAoB,EAAA,MAAA,GAgBLlB,EAAAA,OAAAA,KAFQJ,KAAAsB,EAAApB,GAAAC,SAdH,KAAA,GAAA,IAAA,MAAA,OAAAmB,EAAAH,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,QAcGe,OAAAC,QAAAzC","file":"electronics.router.min.js","sourcesContent":["const express = require(\"express\");\r\nconst app = express.Router();\r\nconst Electronic = require(\"./electronics.model\");\r\n\r\napp.get(\"/\", async (req, res) => {\r\n  //   const { limit = 10, page = 1 } = req.query;\r\n\r\n  try {\r\n    let data = await Electronic.find();\r\n    //   .limit(limit)\r\n    //   .skip((page - 1) * limit);\r\n\r\n    res.send(data);\r\n  } catch (e) {\r\n    res.send(e.massage);\r\n  }\r\n});\r\n\r\napp.delete(\"/\", async (req, res) => {\r\n  try {\r\n    let exists = await Electronic.findOneAndDelete({\r\n      id: req.body.id,\r\n      name: req.body.name,\r\n    });\r\n    console.log(exists, req.body.id, req.body.name);\r\n\r\n    res.status(200).send(\"Product deleted successfully\");\r\n  } catch (e) {\r\n    res.send(e.massage);\r\n  }\r\n});\r\n\r\napp.post(\"/\", async (req, res) => {\r\n  let s = req.body.data.area.split(\",\");\r\n  console.log(s.length);\r\n  res.send(\"SS\");\r\n  try {\r\n    let ele = await Electronic.create({\r\n      id: s[0],\r\n      name: s[1],\r\n      quantity: s[2],\r\n      defaultImage: s[3],\r\n      hoverImage: s[4],\r\n      price: s[5],\r\n      strikePrice: s[6],\r\n      firstImages: [],\r\n      secondImages: [],\r\n      thirdImages: [],\r\n    });\r\n\r\n    res.status(200).send(\"Data Added Successfully\");\r\n  } catch (e) {\r\n    res.status(404).send(e.massage);\r\n  }\r\n});\r\n\r\nmodule.exports = app;\r\n"]}