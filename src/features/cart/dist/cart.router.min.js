"use strict";function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}var express=require("express"),app=express.Router(),Cart=require("./cart.model");app.get("/",function(e,t){var r;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Cart.find());case 3:r=e.sent,t.send(r),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),t.send(e.t0.massage);case 10:case"end":return e.stop()}},null,null,[[0,7]])}),app.post("/",function(t,r){var n,a,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Cart.findOne({token:t.body.token}));case 3:if(n=e.sent,console.log(t.body),n)return e.next=8,regeneratorRuntime.awrap(Cart.find({token:t.body.token}));e.next=15;break;case 8:return a=e.sent,console.log(a),e.next=12,regeneratorRuntime.awrap(Cart.findOneAndUpdate({token:t.body.token},{$set:{cartData:[].concat(_toConsumableArray(a[0].cartData),[t.body.data])}}));case 12:e.sent,e.next=20;break;case 15:return o={token:t.body.token,cartData:t.body.data},e.next=18,regeneratorRuntime.awrap(Cart.create(o));case 18:e.sent,console.log(564);case 20:r.send(data),e.next=26;break;case 23:e.prev=23,e.t0=e.catch(0),r.send(e.t0.massage);case 26:case"end":return e.stop()}},null,null,[[0,23]])}),app.delete("/",function(t,r){var n,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Cart.findOne({token:t.body.token}));case 3:return n=e.sent,a=n.cartData.filter(function(e){return e.id!=t.body.id}),e.next=7,regeneratorRuntime.awrap(Cart.findOneAndUpdate({token:t.body.token},{$set:{cartData:a}}));case 7:e.sent,r.send(data),e.next=14;break;case 11:e.prev=11,e.t0=e.catch(0),r.send(e.t0.massage);case 14:case"end":return e.stop()}},null,null,[[0,11]])}),module.exports=app;
//# sourceMappingURL=cart.router.min.js.map
