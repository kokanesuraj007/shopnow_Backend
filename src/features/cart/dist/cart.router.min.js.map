{"version":3,"sources":["cart.router.js"],"names":["express","require","app","Router","Cart","get","req","res","_data","regeneratorRuntime","async","_context","prev","next","awrap","find","data","sent","send","t0","massage","stop","findOne","token","body","exists","console","log","newData","findOneAndUpdate","$set","cartData","concat","_toConsumableArray","create","_context2","filter","el","id","_context3","module","exports"],"mappings":"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","file":"cart.router.min.js","sourcesContent":["const express = require(\"express\");\r\nconst app = express.Router();\r\nconst Cart = require(\"./cart.model\");\r\napp.get(\"/\", async (req, res) => {\r\n  try {\r\n    let data = await Cart.find();\r\n\r\n    res.send(data);\r\n  } catch (e) {\r\n    res.send(e.massage);\r\n  }\r\n});\r\napp.post(\"/\", async (req, res) => {\r\n  try {\r\n    let exists = await Cart.findOne({ token: req.body.token });\r\n    console.log(req.body);\r\n    if (exists) {\r\n    \r\n      let newData = await Cart.find({ token: req.body.token });\r\n      console.log(newData);\r\n      let h = await Cart.findOneAndUpdate(\r\n        { token: req.body.token },\r\n        { $set: { cartData: [...newData[0].cartData, req.body.data] } }\r\n      );\r\n    } else {\r\n      let newData = { token: req.body.token, cartData: req.body.data };\r\n      let data = await Cart.create(newData);\r\n      console.log(564);\r\n    }\r\n\r\n    res.send(data);\r\n  } catch (e) {\r\n    res.send(e.massage);\r\n  }\r\n});\r\n\r\napp.delete(\"/\", async (req, res) => {\r\n  try {\r\n    let exists = await Cart.findOne({ token: req.body.token });\r\n\r\n    let newData = exists.cartData.filter((el) => el.id != req.body.id);\r\n\r\n    let h = await Cart.findOneAndUpdate(\r\n      { token: req.body.token },\r\n      { $set: { cartData: newData } }\r\n    );\r\n\r\n    res.send(data);\r\n  } catch (e) {\r\n    res.send(e.massage);\r\n  }\r\n});\r\n\r\nmodule.exports = app;"]}